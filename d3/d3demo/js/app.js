// Generated by CoffeeScript 1.3.1
var ChartableObject, District, School, createCircles, dataset, districts, drillIntoDistrict, fadeInCircles, h, i, padding, rScale, reset, selectedDistrict, svg, w, xAxis, xScale, yAxis, yScale, _fn, _i,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

ChartableObject = (function() {

  ChartableObject.name = 'ChartableObject';

  function ChartableObject(name) {
    this.name = name;
    this.growth = Math.round(Math.random() * 100);
    this.proficiency = Math.round(Math.random() * 100);
    this.count = Math.round(Math.random() * 5000);
  }

  return ChartableObject;

})();

District = (function(_super) {

  __extends(District, _super);

  District.name = 'District';

  function District(name) {
    this.name = name;
    District.__super__.constructor.apply(this, arguments);
    this.schools = [];
  }

  return District;

})(ChartableObject);

School = (function(_super) {

  __extends(School, _super);

  School.name = 'School';

  function School(name) {
    this.name = name;
    School.__super__.constructor.apply(this, arguments);
    this.count = Math.round(Math.random() * 500);
  }

  return School;

})(ChartableObject);

dataset = [];

selectedDistrict = null;

_fn = function(i) {
  var d, j, _j, _results;
  d = new District("District " + i);
  dataset.push(d);
  _results = [];
  for (j = _j = 1; _j <= 50; j = ++_j) {
    _results.push((function(j) {
      var s;
      s = new School("School " + j + " (District " + i + ")");
      return d.schools.push(s);
    })(j));
  }
  return _results;
};
for (i = _i = 1; _i <= 50; i = ++_i) {
  _fn(i);
}

districts = dataset;

w = 800;

h = 600;

padding = 30;

svg = d3.select("body").append("svg").attr("width", w).attr("height", h);

xScale = d3.scale.linear().domain([0, 100]).range([padding, w - padding * 2.5]);

xAxis = d3.svg.axis().scale(xScale).orient("bottom").ticks(5);

yScale = d3.scale.linear().domain([0, 100]).range([h - padding, padding]);

yAxis = d3.svg.axis().scale(yScale).orient("left").ticks(5);

rScale = d3.scale.linear().domain([
  0, d3.max(dataset, function(d) {
    return d.count;
  })
]).range([4, 25]);

svg.append("g").attr("class", "axis").attr("transform", "translate(0, " + (h - padding) + ")").call(xAxis);

svg.append("g").attr("class", "axis").attr("transform", "translate(" + padding + ", 0)").call(yAxis);

createCircles = function() {
  var circles;
  return circles = svg.selectAll("circle").data(dataset).enter().append("circle").attr("opacity", 0.0001).on("click", drillIntoDistrict).attr("cx", function(d) {
    return xScale(d.growth);
  }).attr("cy", function(d) {
    return yScale(d.proficiency);
  }).attr("r", function(d) {
    return rScale(d.count);
  });
};

fadeInCircles = function() {
  return svg.selectAll("circle").transition().duration(500).attr("opacity", 0.75);
};

drillIntoDistrict = function(district) {
  selectedDistrict = district;
  dataset = district.schools;
  svg.selectAll("circle").data(dataset).attr("cx", function(d) {
    return xScale(district.growth);
  }).attr("cy", function(d) {
    return yScale(district.proficiency);
  }).attr("r", function(d) {
    return rScale(district.count);
  });
  return svg.selectAll("circle").transition().duration(500).attr("cx", function(d) {
    return xScale(d.growth);
  }).attr("cy", function(d) {
    return yScale(d.proficiency);
  }).attr("r", function(d) {
    return rScale(d.count);
  }).each("end", function() {
    return svg.on("click", reset);
  });
};

reset = function() {
  var circles;
  svg.on("click", null);
  circles = svg.selectAll("circle");
  circles.transition().duration(500).attr("cx", function(d) {
    return xScale(selectedDistrict.growth);
  }).attr("cy", function(d) {
    return yScale(selectedDistrict.proficiency);
  }).attr("r", function(d) {
    return rScale(selectedDistrict.count);
  });
  dataset = districts;
  circles.data(districts);
  return circles.transition().delay(500).duration(0.0001).attr("cx", function(d) {
    return xScale(d.growth);
  }).attr("cy", function(d) {
    return yScale(d.proficiency);
  }).attr("r", function(d) {
    return rScale(d.count);
  }).attr("opacity", function(d) {
    if (d === selectedDistrict) {
      return .75;
    } else {
      return 0.0001;
    }
  }).transition().duration(500).attr("opacity", 0.75);
};

createCircles();

fadeInCircles();
